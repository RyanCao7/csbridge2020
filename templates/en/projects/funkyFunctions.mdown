template: templates/en/projects/projectTemplate.ptl
title: Funky Functions
credit: Written by Chris, Bryce, Brahm, and Lisa

Example: [Average Function]({{pathToRoot}}en/projects/averageFunction.html}})

## 1. Mad Max
Complete the program by filling in the `mad_max` function that returns the largest of three numbers:

```
def mad_max(x, y, z):
    ... your code here ...
```

The `main` function has already been written for you:
```
def main():
    print("The max of 4, 5, and 6 is:", mad_max(4, 5, 6))
    print("The max of -4, 4, and 0 is:", mad_max(-4, 4, 0))
    print("The max of 3, 2, and 1 is:", mad_max(3, 2, 1))
    print("The max of 0, 0, and 0 is:", mad_max(0, 0, 0))
```

Your output should look like this:
```
The max of 4, 5, and 6 is: 6
The max of -4, 4, and 0 is: 4
The max of 3, 2, and 1 is: 3
The max of 0, 0, and 0 is: 0
```

Hint: There are several ways to write your `mad_max` function.

* One approach uses if and if-else conditionals.

* Another approach uses the built-in Python function, `max`, which takes in two numbers and returns the maximum:

        print(max(-3, 4)) # prints 4
        print(max(100, 5)) # prints 100

    Since your function must return the max of 3 numbers, you will have to call the Python function `max` multiple times!

Try out both approaches if you have time!

## 2. Dog Years

Everyone knows that our furry friends age at a different rate to humans. Write a program that takes asks the user for a human age (expressed as a whole number) and prints the equivalent dog age using the fact that there are seven dog years per human year. Consider defining a constant `DOG_YEARS_PER_HUMAN_YEAR`. You can assume the user types in an integer age, but not necessarily that the integer is positive. If it isn't, print an error message.

Your program should define a function called `compute_dog_years` which accepts as a parameter an integer called `human_years`. The function should return the converted human age. You should then edit the `main` function to call this function.

```
def compute_dog_years(human_years):
    ... your code here ...
```

The main function is already written for you, but it is missing the code that calls your `compute_dog_years` function and prints out the correct statement.
```
def main():
    user_input = int(input("Enter an age in human years: "))
    while user_input != 0:
        if user_input < 0:
            print("Sorry, please enter a positive number or 0 to exit")
        else:
            ... your code here ...
        user_input = int(input("Enter an age in human years: "))
```

Here is an example of what one run of your program should look like (user inputs -12, 13, and 0, in order):

```
Enter an age in human years: -12
Sorry, please enter a positive number or 0 to exit
Enter an age in human years: 13
The age in dog years is 91
Enter an age in human years: 0
```
